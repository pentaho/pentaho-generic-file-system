name: Pentaho update version workflow
on:
  workflow_call:
    inputs:
      dry_run:
        type: boolean
        default: true
        description: "Dry run. No real changes should occur."
jobs:
  bump-version:
    runs-on: [ k8s ]
    container:
      image: one.hitachivantara.com/devops-docker-release/pentaho/actions-common:20240305.137
      credentials:
        username: ${{ secrets.PENTAHO_CICD_ONE_USER }}
        password: ${{ secrets.PENTAHO_CICD_ONE_KEY }}
      volumes:
        - /home/runner/caches/pentaho/.m2:/root/.m2
    steps:
      - name: Retrieve settings file
        id: common-maven
        uses: pentaho/actions-common@stable

      - name: Copy settings.xml to .m2 directory
        shell: sh
        run: |
          cp "${{ steps.common-maven.outputs.settings-file-path }}" /root/.m2

      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Get current version
        id: get-version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_OUTPUT

      - name: Increment patch version
        id: increment-version
        shell: bash
        run: |
          current_version=${{ steps.get-version.outputs.current_version }}

          # Remove the -SNAPSHOT suffix if present
          base_version=${current_version%-SNAPSHOT}

          version_parts=$(echo $base_version | tr '.' ' ')
          version_major=$(echo $version_parts | awk '{print $1}')
          version_minor=$(echo $version_parts | awk '{print $2}')
          version_patch=$(echo $version_parts | awk '{print $3 + 1}')
          new_version="${version_major}.${version_minor}.${version_patch}"

          # Reattach the -SNAPSHOT suffix if it was present
          if [[ "$current_version" == *"-SNAPSHOT" ]]; then
            new_version="$new_version-SNAPSHOT"
          fi

          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update Maven version
        run: mvn versions:set -DnewVersion=${{ steps.increment-version.outputs.new_version }}

      - name: Commit changes
        if: ${{ inputs.dry_run == false }}
        run: |
          git config --global --add safe.directory /__w/pentaho-generic-file-system/pentaho-generic-file-system
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add 'pom.xml' '**/pom.xml'
          git commit -m "Update version to ${{ steps.increment-version.outputs.new_version }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
