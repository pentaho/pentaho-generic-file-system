name: Pentaho update version workflow
on:
  workflow_call:
    inputs:
      dry_run:
        type: boolean
        default: true
        description: "Dry run. No real changes should occur."
jobs:
  bump-version:
    runs-on: [ k8s ]
    container:
      image: one.hitachivantara.com/devops-docker-release/pentaho/actions-common:20240305.137
      credentials:
        username: ${{ secrets.PENTAHO_CICD_ONE_USER }}
        password: ${{ secrets.PENTAHO_CICD_ONE_KEY }}
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Get current version
        id: get-version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_OUTPUT

      - name: Increment patch version
        id: increment-version
        run: |
          current_version=${{ steps.get-version.outputs.current_version }}

          # Remove the -SNAPSHOT suffix if present
          base_version=${current_version%-SNAPSHOT}

          IFS='.' read -r -a version_parts <<< "$base_version"
          patch_version=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.$patch_version"

          # Reattach the -SNAPSHOT suffix if it was present
          if [[ "$current_version" == *-SNAPSHOT ]]; then
            new_version="$new_version-SNAPSHOT"
          fi

          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update Maven version
        run: mvn versions:set -DnewVersion=${{ steps.increment-version.outputs.new_version }}

      - name: Commit changes
        if: ${{ inputs.dry_run == false }}
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add '**/pom.xml'
          git commit -m "Update version to ${{ steps.increment-version.outputs.new_version }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
